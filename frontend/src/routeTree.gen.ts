/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as sports1Import } from './routes/(sports)/1'
import { Route as sportsStravaTokenSuccessImport } from './routes/(sports)/strava/token-success'
import { Route as sportsStravaTokenFailureImport } from './routes/(sports)/strava/token-failure'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const sports1Route = sports1Import.update({
  id: '/(sports)/1',
  path: '/1',
  getParentRoute: () => rootRoute,
} as any)

const sportsStravaTokenSuccessRoute = sportsStravaTokenSuccessImport.update({
  id: '/(sports)/strava/token-success',
  path: '/strava/token-success',
  getParentRoute: () => rootRoute,
} as any)

const sportsStravaTokenFailureRoute = sportsStravaTokenFailureImport.update({
  id: '/(sports)/strava/token-failure',
  path: '/strava/token-failure',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(sports)/1': {
      id: '/(sports)/1'
      path: '/1'
      fullPath: '/1'
      preLoaderRoute: typeof sports1Import
      parentRoute: typeof rootRoute
    }
    '/(sports)/strava/token-failure': {
      id: '/(sports)/strava/token-failure'
      path: '/strava/token-failure'
      fullPath: '/strava/token-failure'
      preLoaderRoute: typeof sportsStravaTokenFailureImport
      parentRoute: typeof rootRoute
    }
    '/(sports)/strava/token-success': {
      id: '/(sports)/strava/token-success'
      path: '/strava/token-success'
      fullPath: '/strava/token-success'
      preLoaderRoute: typeof sportsStravaTokenSuccessImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/1': typeof sports1Route
  '/strava/token-failure': typeof sportsStravaTokenFailureRoute
  '/strava/token-success': typeof sportsStravaTokenSuccessRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/1': typeof sports1Route
  '/strava/token-failure': typeof sportsStravaTokenFailureRoute
  '/strava/token-success': typeof sportsStravaTokenSuccessRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(sports)/1': typeof sports1Route
  '/(sports)/strava/token-failure': typeof sportsStravaTokenFailureRoute
  '/(sports)/strava/token-success': typeof sportsStravaTokenSuccessRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/1' | '/strava/token-failure' | '/strava/token-success'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/1' | '/strava/token-failure' | '/strava/token-success'
  id:
    | '__root__'
    | '/'
    | '/(sports)/1'
    | '/(sports)/strava/token-failure'
    | '/(sports)/strava/token-success'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  sports1Route: typeof sports1Route
  sportsStravaTokenFailureRoute: typeof sportsStravaTokenFailureRoute
  sportsStravaTokenSuccessRoute: typeof sportsStravaTokenSuccessRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  sports1Route: sports1Route,
  sportsStravaTokenFailureRoute: sportsStravaTokenFailureRoute,
  sportsStravaTokenSuccessRoute: sportsStravaTokenSuccessRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(sports)/1",
        "/(sports)/strava/token-failure",
        "/(sports)/strava/token-success"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(sports)/1": {
      "filePath": "(sports)/1.tsx"
    },
    "/(sports)/strava/token-failure": {
      "filePath": "(sports)/strava/token-failure.tsx"
    },
    "/(sports)/strava/token-success": {
      "filePath": "(sports)/strava/token-success.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
